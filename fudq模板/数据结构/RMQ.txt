//arr是目标数组，n表示长度，求区间内最小（大）值，数组下标从1开始
int rmq_n[N][32];
void rmq_init(int arr[],int n)
{
    int i,j;
    for(i=1;i<=n;++i)
    	rmq_n[i][0]=arr[i];//rmq_m[i][0]=arr[i];
    for(j=1;j<=int(log(n+0.0)/log(2.0));++j)
        for(i=1;i+(1<<j)-1<=n;++i)
            rmq_n[i][j]=min(rmq_n[i][j-1],rmq_n[i+(1<<(j-1))][j-1]);
			//rmq_m[i][j]=max(rmq_m[i][j-1],rmq_m[i+(1<<(j-1))][j-1]);
}

int rmq(int a,int b)
{
    int m=int(log(b-a+1.0)/log(2.0));
    int x=min(rmq_n[a][m],rmq_n[b-(1<<m)+1][m]);
    //int x=max(rmq_m[a][m],rmq_m[b-(1<<m)+1][m]);
    return x;
}



//求区间内最小（大）值的数组小标
int rmq_n[N][32];

int check(int i,int j)
{
    return f[i]<=f[j]?i:j;
}

void rmq_init(int arr[],int n)
{
    int i,j;
    for(i=1;i<=n;i++)
        rmq_n[i][0]=i;
    for(j=1;(1<<j)<=n;j++)
        for(i=1;i+(1<<j)-1<=n;i++)
        	rmq_n[i][j]=check(rmq_n[i][j-1],rmq_n[i+(1<<(j-1))][j-1]);
}

int rmq(int a,int b)
{
    int m=int(log(b-a+1.0)/log(2.0));
    int x=check(rmq_n[a][m],rmq_n[b-(1<<m)+1][m]);
    return x;
}
