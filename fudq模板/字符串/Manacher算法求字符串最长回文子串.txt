Manacher算法求某个字符串的最长回文子串，时间复杂度为O(n)

#define N 110010
char s[N*2],str[N*2];
int n,p[N*2];

//将字符串如“abab”处理成新的字符串“$#a#b#a#b#”
void fun()
{
	int len=(int)strlen(s);
	str[0]='$';str[1]='#';
	n=2;
	for(int i=0;i<len;i++)
	{
		str[n++]=s[i];
		str[n++]='#';
	}
	str[n]='\0';
}

void Manacher()
{
	int i,id,mx=0;
	for(i=1;i<n;i++)
	{
		if(mx > i)
			p[i]=min(p[2*id-i],p[id]+id-i);
		else
			p[i]=1;
		for(;str[i+p[i]] == str[i-p[i]];p[i]++)
			;
		if(p[i]+i > mx)
		{
			mx=p[i]+i;
			id=i;
		}
	}
}

void work()
{
	int ans=-1;
	for(int i=1;i<n;i++)
		ans=max(ans,p[i]);
	printf("%d\n",ans-1);
}


int main()
{
    while(scanf("%s",s)!=EOF)
    {
    	fun();
    	Manacher();
    	work();
    }
    return 0;
}
