int a[N][N],b[N][N],r[N][N];
//一般做法
void Mat_mul(int n)
{
	MEM(r);
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++)
			for(int k=0;k<n;k++)
				r[i][j]=r[i][j]+a[i][k]*b[k][j];
}

//稍加优化
void Mat_mul(int n)
{
	MEM(r);
	for(int k=0;k<n;k++)	//k层循环放最外面
		for(int i=0;i<n;i++)
		{
			if(!a[i][k]) continue;	//加剪枝
			for(int j=0;j<n;j++)
				r[i][j]+=a[i][k]*b[k][j];
		}
}


//带取模的矩阵乘法优化
void mat_mul(int n,int pri)
{
	int i,j,k,L,*p2;
	int tmp[N],con;
	for(i=0;i<n;i++)
	{
		memset(tmp,0,sizeof(tmp));
		for(k=0,L=(n&~15);k<L;k++)
		{
			con=a[i][k];
			for(j=0,p2=b[k];j<n;j++,p2++)
				tmp[j]+=con*(*p2);
			if((k&15) == 15)
			{
				for(j=0;j<n;j++)
					tmp[j]%=pri;
			}
		}
		for(;k<n;k++)
		{
			con=a[i][k];
			for(j=0,p2=b[k];j<n;j++,p2++)
				tmp[j]+=con*(*p2);
		}
		for(j=0;j<n;++j)
			r[i][j]=tmp[j]%pri;
	}
}