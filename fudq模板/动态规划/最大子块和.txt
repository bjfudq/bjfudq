给出一个矩阵，求出其最大的矩阵和。
解法：
可以把最大矩阵和问题看成是二维的最大子段和问题，将二维化为一维求解即可；
n行数，枚举选择其中连续的几行（用两个for就可以完成），将每一列的数都相加，生成一个一维数组，然后求这个一维数组的最大子段和；然后取最大值。

参考代码：
#define N 1010
#define M INT_MIN
int f[N],a[N],b[N];
int p[N][N];
int LSS_DP(int n,int a[])
{
	//最大子段和
	int i,res=M;
	f[0]=a[0];
	for(i=1;i<n;i++)
	{
		if(f[i-1]>0)
			f[i]=f[i-1]+a[i];
		else
			f[i]=a[i];
		if(f[i]>res)
			res=f[i];
	}
	return res;
}

int LSB_DP(int m,int n,int **p)
{
	//最大子块和
	int sum,i,k,j,res;
	res=0;
	int b[N];
	for(i=0;i<m;i++)
	{
		for(j=0;j<n;j++)
			b[k]=0;
		for(j=i;j<m;j++)
		{
			for(k=0;k<n;k++)
				b[k]+=p[j][k];
			sum=LSS_DP(n,b);
			if(sum>res)
				res=sum;
		}
	}
	return res;
}
